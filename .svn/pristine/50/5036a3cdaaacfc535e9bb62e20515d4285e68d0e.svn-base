package com.example.demo.admin;

import com.example.config.Layui;
import com.example.mapper.Admin.AdminMapper;
import com.example.mapper.Api.ApiMapper;
import com.example.model.Menu;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;


@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
@Controller
@RequestMapping("/menu")
public class MenuController extends CommonController{

    @Autowired
    private AdminMapper adminMapper;

    @Autowired
    private ApiMapper apiMapper;

    @Autowired
    private JdbcTemplate jdbcTemplate;


    @RequestMapping("/index")
    public String Menu(Model model) {
        model.addAttribute("title","菜单列表");
        return "/admin/menu/index";
    }

    /*分页查询*/
    @GetMapping("/list")
    @ResponseBody
    public Layui list(@RequestParam(value = "string",required = false,defaultValue = "") String string,
       @RequestParam(value = "page",required = false,defaultValue = "1") int page,
       @RequestParam(value = "limit",required = false,defaultValue = "1") int size) {
        PageHelper.startPage(page,size,"fid desc");
        //3. 因为PageHelper的作用，这里就会返回当前分页的集合了
        List<Menu> cs =  adminMapper.menu_list(string.trim());
        //4. 根据返回的集合，创建PageInfo对象
        PageInfo<Menu> list = new PageInfo<>(cs);
        return Layui.data((int) list.getTotal(), list.getList());
    }

    @GetMapping("/edit")
    public String Edit(Model model,@RequestParam(value = "fid",required = false) Integer fid) {
        model.addAttribute("list",adminMapper.menu_info(fid));
        model.addAttribute("title","编辑");
        return "/admin/menu/edit";
    }

    /*新增 更新*/
    @PostMapping("/update")
    public String update(Menu menu,HttpServletResponse response) throws IOException {
        Integer status;
        System.out.println(menu);
        if(menu.getFid()!=null){
            status=adminMapper.menu_update(menu.getFid(),menu.getMenu_name(),menu.getRoute(),menu.getRecord_status());
        }else {
            status=adminMapper.menu_add(menu);
        }
        if(status==1){
            //数据变更保存换缓存
            Comment("menu_list",apiMapper.GetMenuList());
        }
        return_status(status,"/menu/index",response);
        return "";
    }

    /*删除*/
    @PostMapping("/del")
    public String Del(@RequestParam(value = "type",required = false) Integer type,
                      @RequestParam(value = "fid",required = false) String fid,
                      HttpServletResponse response) throws Exception{
        Integer status;
        if(type==2){
            System.out.println(fid);
            String sql="update base_menu_info set record_status=2 where fid in ("+fid+")";
            status=jdbcTemplate.update(sql);
            //status=adminMapper.menu_update_status(fid,"2");
        }else {
            status=adminMapper.menu_del(fid);
        }
        System.out.println(status);
        if(status==1){
            //数据变更保存换缓存
            Comment("menu_list",apiMapper.GetMenuList());
        }
        return_status(status,"/menu/index",response);
        return "";
    }
}
